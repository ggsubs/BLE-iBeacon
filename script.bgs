dim cmd_counter
dim rx_counter
dim string(5)
dim is_on

event system_boot( major, minor, patch, build, ll_version, protocol_version, hw )

	# Set advertisement interval to 100 to 500ms. Use all advertisement channels
	call gap_set_adv_parameters( 20, 1	00, 7 )
	
	#set to advertising mode
	call gap_set_mode( gap_general_discoverable, gap_undirected_connectable )
	
	#set bondable mode
	call sm_set_bondable_mode(1)
	
	# Start timer at 5 secs (5 * 32768) interval, repeating
	# call hardware_set_soft_timer( 163840, 0, 0 )
	
	# Set response attribute to initial value
	cmd_counter = 0
	rx_counter = 0
	call attributes_write( xgatt_response, 0, 5, "00-00" )
	
	# Configure port P1_5 as output
	call hardware_io_port_config_direction( 0, $20 )
	call hardware_io_port_write( 0, $20, $20 );
	is_on = 1
	
#	call system_endpoint_tx( system_endpoint_uart1, 6, "READY-" )
end

# Received data on UART
event system_endpoint_rx( endpoint, data_len, data_data )
	# Toggle LED
	if is_on = 1 then
		is_on = 0
		call hardware_io_port_write( 0, $20, 0 )
	else
		is_on = 1
		call hardware_io_port_write( 0, $20, $20 )
	end if
end

# Attribute changed
event attributes_value( connection, reason, handle, offset, value_len, value )
	if handle = xgatt_command then
		# Toggle LED
		if is_on = 1 then
			is_on = 0
			call hardware_io_port_write( 0, $20, 0 )
		else
			is_on = 1
			call hardware_io_port_write( 0, $20, $20 )
		end if
		
#		call system_endpoint_tx( system_endpoint_uart1, 2, "C:" )
#		call system_endpoint_tx( system_endpoint_uart1, value_len, value(0:value_len) )
#		call system_endpoint_tx( system_endpoint_uart1, 1, "-" )
		
		# Increase cmd_counter (and wrap around if necessary)
		cmd_counter = cmd_counter + 1
		if cmd_counter > 99 then
			cmd_counter = 0
		end if

		# Set attribute
		string(0:1) = (cmd_counter / 10) + 48 
		string(1:1) = cmd_counter + (cmd_counter / 10 * -10) + 48
		string(2:1) = 45
		string(3:1) = (rx_counter / 10) + 48 
		string(4:1) = rx_counter + (rx_counter / 10 * -10) + 48
		call attributes_write( xgatt_response, 0, 5, string(0:5) )
	end if
end

#event hardware_soft_timer( handle )
#	# Ignore handle â€“ we have only one timer
#	call system_endpoint_tx( system_endpoint_uart1, 5, "PING-" )
#	counter = counter + 1
#	if counter = 4 then
#		call attributes_write( xgatt_response, 0, 5, "xxxxx" )
#	end if
#end

event connection_status(connection, flags, address, address_type, conn_interval, timeout, latency, bonding)
#	call system_endpoint_tx( system_endpoint_uart1, 8, "Connect-" )
	
	cmd_counter = 0
	rx_counter = 0
	call attributes_write( xgatt_response, 0, 5, "00-00" )
end

# Disconnection event listener
event connection_disconnected(handle, result)
#	call system_endpoint_tx( system_endpoint_uart1, 11, "Disconnect-" )
    call gap_set_mode( gap_general_discoverable, gap_undirected_connectable )

	# Reset counters
	cmd_counter = 0
	rx_counter = 0
	call attributes_write( xgatt_response, 0, 5, "00-00" )
end