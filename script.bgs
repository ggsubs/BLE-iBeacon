dim cmd_counter
dim rx_counter
dim string(5)
dim is_on

event system_boot( major, minor, patch, build, ll_version, protocol_version, hw )

	# Set advertisement interval to 100 to 500ms. Use all advertisement channels
	call gap_set_adv_parameters( 20, 100, 7 )
	
	#set to advertising mode
	call gap_set_mode( gap_general_discoverable, gap_undirected_connectable )
	
	#set bondable mode
	call sm_set_bondable_mode(1)
	
	# Set response attribute to initial value
	cmd_counter = 0
	rx_counter = 0
end

# Attribute changed
event attributes_value( connection, reason, handle, offset, value_len, value )
	if handle = xgatt_command then
		# Echo atribute (i.e. command) to serial
		call system_endpoint_tx( system_endpoint_uart0, 5, value(0:5) )
		call system_endpoint_tx( system_endpoint_uart0, 1, "\n" )
	end if
end

event connection_status(connection, flags, address, address_type, conn_interval, timeout, latency, bonding)
	# Connected: send message over USART
	call system_endpoint_tx( system_endpoint_uart0, 2, "C\n" )
	
	cmd_counter = 0
	rx_counter = 0
end

# Disconnection event listener
event connection_disconnected(handle, result)
	# Disconnected: send message to MCU
	call system_endpoint_tx( system_endpoint_uart0, 2, "D\n" )
	
    call gap_set_mode( gap_general_discoverable, gap_undirected_connectable )
	call gap_set_adv_parameters( 20, 100, 7 )

	# Reset counters
	cmd_counter = 0
	rx_counter = 0
end